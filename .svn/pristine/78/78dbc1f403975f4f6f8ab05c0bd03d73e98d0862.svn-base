/**
 * @description 
 * @class dny.VendingMachine.View
 * @names dny.VendingMachine
 * @namespace
 * @author 
 * @version 1.0.0
 * @since February 13, 2012
 * @extends jindo.Component
 * @copyright Copyright (c) 2012, NHN Technology Services inc.
 * @generated by Jindo2 Code Generator v1.0.3
 */
dny.VendingMachine.View = jindo.$Class({
	/** @lends dny.VendingMachine.View.prototype */

	/**
     * @description Vending machine.
	 * @private
	 * @type Wrapping Element
	 */
	_welVendingMachine : null,	
	/**
     * @description On vending machine click. 
	 * @private
	 * @type Wrapping Function
	 */
	_wfOnVendingMachineClick : null,
	/**
     * @description Console.
	 * @private
	 * @type Wrapping Element
	 */
	_welConsole : null,
	/**
     * @description My money.
	 * @private
	 * @type Wrapping Element
	 */
	_welMyMoney : null,
	/**
	 * @description Current inserted money.
	 * @private
	 * @type Wrapping Element
	 */
	_welCurrentInsertedMoney : null,
	/**
	 * @description Fifity won.
	 * @private
	 * @type Element
	 */
	_elFifityWon : null,
	/**
	 * @description Hundred won.
	 * @private
	 * @type Element
	 */
	_elHundredWon : null,
	/**
	 * @description Five hundred won.
	 * @private
	 * @type Element
	 */
	_elFiveHundredWon : null,
	/**
	 * @description Thousand won.
	 * @private
	 * @type Element
	 */
	_elThousandWon : null,
	/**
	 * @description Fifity won.
	 * @private
	 * @type Wrapping Object
	 */
	_woFifityWon : null,
	/**
	 * @description Hundred won.
	 * @private
	 * @type Wrapping Object
	 */
	_woHundredWon : null,
	/**
	 * @description Five hundred won.
	 * @private
	 * @type Wrapping Object
	 */
	_woFiveHundredWon : null,
	/**
	 * @description Thousand won.
	 * @private
	 * @type Wrapping Object
	 */
	_woThousandWon : null,
	/**
	 * @description Paper money slot.
	 * @private
	 * @type Wrapping Object
	 */
	_woPaperMoneySlot : null,
	/**
	 * @description Coin slot.
	 * @private
	 * @type Wrapping Object
	 */
	_woCoinSlot : null,
	/**
	 * @description Beverage.
	 * @private
	 * @type Wrapping ElementList
	 */
	_wellBeverage : null,

	/**
     * @description $init.
	 * @public
	 * @constructs
	 * @param {String} sElementName
	 * @param {Number} nMyMoney
	 */
	$init : function(sElementName, nMyMoney) {
		this._welVendingMachine = jindo.$Element(sElementName);
		if(!this._welVendingMachine) return null;	
		
		// init console
		this._welConsole = jindo.$Element(this._welVendingMachine.query(".console_area"));		
		this.flushConsole();
		this.logToConsole("Console 초기화");
		
		// init cash
		this._initCash();
		this.logToConsole("현금 초기화");
		
		// init beverage and return button
		this._wellBeverage = jindo.$ElementList(this._welVendingMachine.queryAll(".product_area ul li"));
		this._onVendingMachineClick();
		this.logToConsole("음료수+반환버튼 초기화");
		
		// init My money
		this._welMyMoney = jindo.$Element(this._welVendingMachine.query(".my_money span"));	
		this.setMyMoney(nMyMoney);
		this.logToConsole("나의 돈 초기화");
		
		// init current inserted money
		this._welCurrentInsertedMoney = jindo.$Element(this._welVendingMachine.query(".insert span"));
		this.logToConsole("투입금액화면 초기화");
		
		// init return slot
		this._welReturnSlot = jindo.$Element(this._welVendingMachine.query(".return_money"));
		this.logToConsole("반환구 초기화");
	},

	/**
     * @description On vending machine click.
	 * @private
	 */
	_onVendingMachineClick : function() {
		var _self = this;
		this._welVendingMachine.delegate("click", "", function(eEvent){
			// beverage and return button
			if(eEvent.element.tagName == "BUTTON"){
				// beverage button
				if(eEvent.element.parentNode.tagName == "LI"){
					var nIndex = parseInt(eEvent.element.parentNode.className.replace("item", ""), 10) - 1;
					_self.fireEvent("beverageClicked" , {nIndex : nIndex});
					
				// return button
				}else if(eEvent.element.parentNode.className == "insert_area"){
					_self.fireEvent("returnButtonClicked", {});
				}
			}
		});
	},
	
	/**
	 * @description Init cash
	 * @private
	 */
	_initCash : function() {
		// get cash element from html
		this._elFifityWon = this._welVendingMachine.query(".w50");
		this._elHundredWon = this._welVendingMachine.query(".w100");
		this._elFiveHundredWon = this._welVendingMachine.query(".w500");
		this._elThousandWon = this._welVendingMachine.query(".w1000");
		
		// new draggable
		this._woFiftyWon = new dny.Draggable(this._elFifityWon);
		this._woHundredWon = new dny.Draggable(this._elHundredWon);
		this._woFiveHundredWon = new dny.Draggable(this._elFiveHundredWon);
		this._woThousandWon = new dny.Draggable(this._elThousandWon);	
		
		// get slot element from html
		var elPaperMoneySlot = this._welVendingMachine.query(".insert_papermoney"); 
		var elCoinSlot = this._welVendingMachine.query(".insert_coin");
		
		// new droppable
		this._woPaperMoneySlot = new dny.Droppable(elPaperMoneySlot);
		this._woCoinSlot = new dny.Droppable(elCoinSlot);
		
		// define custom event
		var _self = this;
		this._woFiftyWon.attach({
			dragEnd : function(oCustomEvent){
				var bIsMouseOver = _self._woCoinSlot.isMouseOverHere(oCustomEvent.aMousePosition.pageX, oCustomEvent.aMousePosition.pageY);
				var sEventName = bIsMouseOver ? "Inserted" : "Dropped";
				_self.fireEvent("cash" + sEventName, {nValue : 50});
			}
		});	
		this._woHundredWon.attach({
			dragEnd : function(oCustomEvent){
				var bIsMouseOver = _self._woCoinSlot.isMouseOverHere(oCustomEvent.aMousePosition.pageX, oCustomEvent.aMousePosition.pageY);
				var sEventName = bIsMouseOver ? "Inserted" : "Dropped";
				_self.fireEvent("cash" + sEventName, {nValue : 100});
			}
		});	
		this._woFiveHundredWon.attach({
			dragEnd : function(oCustomEvent){
				var bIsMouseOver = _self._woCoinSlot.isMouseOverHere(oCustomEvent.aMousePosition.pageX, oCustomEvent.aMousePosition.pageY);
				var sEventName = bIsMouseOver ? "Inserted" : "Dropped";
				_self.fireEvent("cash" + sEventName, {nValue : 500});
			}
		});		
		this._woThousandWon.attach({
			dragEnd : function(oCustomEvent){
				var bIsMouseOver = _self._woPaperMoneySlot.isMouseOverHere(oCustomEvent.aMousePosition.pageX, oCustomEvent.aMousePosition.pageY);
				var sEventName = bIsMouseOver ? "Inserted" : "Dropped";
				_self.fireEvent("cash" + sEventName, {nValue : 1000});
			}
		});	
	},

	/**
     * @description Set beverage inventory sold out.
	 * @public
	 * @param {Number} nIndex
	 * @param {Boolean} bType, true is sold out, false is not
	 */
	setBeverageInventorySoldOut : function(nIndex, bType) {
		var _welBeverage = this._wellBeverage.get(nIndex);
		if(bType){
			jindo.$Element(_welBeverage.query("button")).attr("disabled", true);
			_welBeverage.appendHTML('<span class="soldout_msg">품절</span>');
		}else{
			_welBeverage.removeClass("soldout");
			jindo.$Element(_welBeverage.query("button")).attr("disabled", false);
			var _welSoldOut = jindo.$Element(_welBeverage.query(".soldout_msg"));
			if(_welSoldOut){
				_welSoldOut.leave();
			}
			
		}
	},

	/**
     * @description Log to console.
	 * @public
	 * @param {String} sMessage
	 */
	logToConsole : function(sMessage) {
		this._welConsole.html(this._welConsole.html() + "<br />" + sMessage);
		this._welConsole.$value().scrollTop = this._welConsole.$value().scrollHeight;
	},
	
	/**
	 * @description Flush console
	 * @public
	 */
	flushConsole : function() {
		this._welConsole.html("");
	},
	
	/**
	 * @description Set my money
	 * @param {Number} nMoney
	 */
	setMyMoney : function(nMoney){
		this._welMyMoney.html(dny.numberFormat(nMoney));
	},
	
	/**
	 * @description Set current inserted money
	 * @param {Number} nMoney
	 */
	setCurrentInsertedMoney : function(nMoney){
		this._welCurrentInsertedMoney.html(dny.numberFormat(nMoney));
	},
	
	/**
	 * @description Return money
	 * @param {Wrapping Array of Wrapping Object} wawoCashEntity
	 */
	returnMoney : function(wawoCashEntity){
		var nGap = null;
		var nTop = 0;
		for(var i=0; i<wawoCashEntity.length(); i++){
			var welCash = null;
			switch(wawoCashEntity.get(i).getValue()){
			case 50 :
				welCash = this._elFifityWon.cloneNode(true);
				break;
			case 100 :
				welCash = this._elHundredWon.cloneNode(true);
				break;
			case 500 :
				welCash = this._elFiveHundredWon.cloneNode(true);
				break;
			case 1000 :
				welCash = this._elThousandWon.cloneNode(true);
				break;
			}
			if(welCash){
				welCash = jindo.$Element(welCash);
				this._welReturnSlot.append(welCash);
				if(i == 0){
					nTop = welCash.offset().top;
				}else{
					nTop += 20;
				}
				welCash.offset(nTop, welCash.offset().left);
			}
		}
		var _self = this;
		setTimeout(function(){
			var awelCash = _self._welReturnSlot.child(function(v){
				return v.hasClass("w50") || v.hasClass("w100") || v.hasClass("w500") || v.hasClass("w1000");
			});
			for(var i=0; i<awelCash.length; i++){
				awelCash[i].disappear(1, function(wel){
					wel.leave();
				});
			}
		}, 1000);
	}

}).extend(jindo.Component);

