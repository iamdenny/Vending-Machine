/**
 * @description 
 * @class dny.VendingMachine.CurrentInsertedMoneyBagModel
 * @names dny.VendingMachine
 * @namespace
 * @author 
 * @version 1.0.0
 * @since February 13, 2012
 * @copyright Copyright (c) 2012, NHN Technology Services inc.
 * @generated by Jindo2 Code Generator v1.0.3
 */
dny.VendingMachine.CurrentInsertedMoneyBagModel = jindo.$Class({
	/** @lends dny.VendingMachine.CurrentInsertedMoneyBagModel.prototype */

	/**
     * @description Cash entity.
	 * @private
	 * @type Wrapping Array of Wrapping Object
	 */
	_wawoCashEntity : null,
	/**
     * @description Max inserted money.
	 * @private
	 * @type Number
	 */
	_nMaxInsertedMoney : null,
	/**
     * @description Max thousand won count. 
	 * @private
	 * @type Number
	 */
	_nMaxThousandWonCount : null,
	/**
     * @description Current inserted money.
	 * @private
	 * @type Number
	 */
	_nCurrentInsertedMoney : null,
	/**
     * @description Current thousand won count.
	 * @private
	 * @type Number
	 */
	_nCurrentThousandWonCount : null,
	/**
	 * @description Flush
	 * @private
	 * @type Boolean
	 */
	_bFlush : null,

	/**
     * @description $init.
	 * @public
	 * @constructs
	 * @param {Number} nMaxInsertedMoney
	 * @param {Number} nMaxThousandWonCount
	 */
	$init : function(nMaxInsertedMoney, nMaxThousandWonCount) {
		this._nMaxInsertedMoney = nMaxInsertedMoney;
		this._nMaxThousandWonCount = nMaxThousandWonCount;
		this._nCurrentInsertedMoney = 0;
		this._wawoCashEntity = new jindo.$A();
		this._bFlush = true;
	},

	/**
     * @description Receive cash from customer.
	 * @public
	 * @param {Wrapping Object} woCashEntity
	 */
	receiveCash : function(woCashEntity) {
		this._wawoCashEntity.push(woCashEntity);
		this._nCurrentInsertedMoney = this._nCurrentInsertedMoney + woCashEntity.getValue();
	},

	/**
     * @description Flush cash.
	 * @public
	 * @returns {Wrapping Array of Wrapping Object}
	 */
	flushCash : function() {
		this._bFlush = true;
		var _wawoTempCashEntity = new jindo.$A();
		for(var i=0; i<this._wawoCashEntity.length(); i++){
			_wawoTempCashEntity.push(this._wawoCashEntity.get(i));
		}
		this._wawoCashEntity.empty();
		this._nCurrentInsertedMoney = 0;
		this._nCurrentThousandWonCount = 0;
		return _wawoTempCashEntity;
	},

	/**
     * @description Get current money.
	 * @public
	 * @returns {Number}
	 */
	getCurrentMoney : function() {
		return this._nCurrentInsertedMoney;
	},

	/**
     * @description Get current cash entity.
	 * @public
	 * @returns {Wrapping Array of Wrapping Object}
	 */
	getCurrentCashEntity : function() {
		return this._wawoCashEntity;
	},

	/**
     * @description Is max count of thousand won?
	 * @public
	 * @returns {Boolean}
	 */
	isMaxCountOfThousandWon : function() {
		for(var i=0; i<this._wawoCashEntity.length(); i++){
			if(this._wawoCashEntity.get(i).isPaperMoney()){
				this._nCurrentThousandWonCount++;
			}
		}
		return (this._nCurrentThousandWonCount >= this._nMaxThousandWonCount) ? true : false; 	
	},
	
	/**
	 * @description Is max inserted money with?
	 * @param nMoney
	 * @returns {Boolean}
	 */
	isMaxInsertedMoneyWith : function(nMoney) {
		var _nTempCurrentInsertedMoney = this._nCurrentInsertedMoney + nMoney;
		return (_nTempCurrentInsertedMoney > this._nMaxInsertedMoney) ? true : false;
	},

	/**
     * @description Reset current thousand won count.
	 * @public
	 */
	resetCurrentThousandWonCount : function() {
		this._nCurrentThousandWonCount = 0;
	},

	/**
     * @description Spend money.
	 * @public
	 * @param {Number} nSellPrice
	 * @returns {Wrapping Array of Wrapping Object}
	 */
	spendMoney : function(nSellPrice) {
		this._nCurrentInsertedMoney = this._nCurrentInsertedMoney - nSellPrice;
		this._nCurrentThousandWonCount = 0;
		
		if(this._nCurrentInsertedMoney == 0){
			this._bFlush = true;
		}else{
			this._bFlush = false;
		}
		
		var _wawoTempCashEntity = new jindo.$A();
		for(var i=0; i<this._wawoCashEntity.length(); i++){
			_wawoTempCashEntity.push(this._wawoCashEntity.get(i));
		}
		this._wawoCashEntity.empty();
		return _wawoTempCashEntity;		
	},
	
	/**
	 * @description Get max thousand won count.
	 * @public
	 * @returns {Number}
	 */
	getMaxThousandWonCount : function() {
		return this._nMaxThousandWonCount;
	},
	
	/**
	 * @description Get max inserted money.
	 * @public
	 * @returns {Number}
	 */
	getMaxInsertedMoney : function() {
		return this._nMaxInsertedMoney;
	},
	
	/**
	 * @description Is flushed?
	 * @public
	 * @returns {Boolean}
	 */
	isFlushed : function() {
		return this._bFlush;
	},
	
	/**
	 * @description Set flush. 
	 * @public
	 * @param {Boolean} bFlush
	 */
	setFlush : function(bFlush){
		this._bFlush = bFlush;
	},

});

